name: Search Connector - Upsert

on:
  repository_dispatch:
    types:
      - resource-published
jobs:
  check-event-status:
    runs-on: ubuntu-latest
    steps:
    - run: |
        echo "Status: ${{ github.event.client_payload.status }}"
        echo "Site: ${{ github.event.client_payload.site }}"
        echo "Org: ${{ github.event.client_payload.org }}"
        echo "Path: ${{ github.event.client_payload.path }}"
  notify-connector:
    if: (github.event.client_payload.status == 200 || github.event.client_payload.status == 204) && endsWith(github.event.client_payload.path, '.md')
    runs-on: ubuntu-latest
    steps:
    - name: Notify upsert endpoint
      run: |
        sleep 45s
        PAGE_PATH=$(echo "${{ github.event.client_payload.path }}" | awk '{sub("index.md$", ""); sub(".md$", ""); print}')
        WEBSITE_NAME="${{ github.event.client_payload.site }}"
        URI=$(echo "${{ vars.CONNECTOR_DOMAIN }}/$WEBSITE_NAME")
        BODY='{ "paths": [ "'$PAGE_PATH'" ] }'
        BODY="$(echo "$BODY" | jq -c)"
        response=$(curl -s -H "x-api-key: ${{ secrets.API_KEY }}" -X POST "$URI" -d "$BODY")
        echo "response: $response"
      shell: bash

  status-checker:
    needs: notify-connector
    runs-on: ubuntu-latest
    if: always()
    env:
      SUBJECT: Notify Connector Job Failed
      BODY: The notify-connector job has failed for path: ${{ github.event.client_payload.path }}.
      SEND_EMAIL_NOTIFICATION: ${{ vars.SEND_EMAIL_NOTIFICATION }}
      EMAIL_SENDER: ${{ secrets.EMAIL_SENDER }}
      EMAIL_RECIPIENT: ${{ secrets.EMAIL_RECIPIENT }}
      BREVO_API_KEY: ${{ secrets.BREVO_API_KEY }}
      EMAIL_HANDLER: https://api.brevo.com/v3/smtp/email
    steps:
    - name: Check notify-connector status and send email if needed
      if: ${{ needs.notify-connector.result != 'success' && env.SEND_EMAIL_NOTIFICATION == 'true' }}
      run: |
        curl -H "api-key: $BREVO_API_KEY" \
            -H "Content-Type: application/json" \
            -X POST -d '{
              "sender": { "name": "Search Connector Upsert", "email": "'"$EMAIL_SENDER"'" },
              "to": [
                { "email": "'"$EMAIL_RECIPIENT"'", "name": "'"$EMAIL_RECIPIENT"'" }
              ],
              "subject": "'"$SUBJECT"'",
              "htmlContent": "<html><body><p>'"$BODY"'</p></body></html>"
            }' "$EMAIL_HANDLER"


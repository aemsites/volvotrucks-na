name: Old Search Connector - Upsert

on: 
  repository_dispatch:
    types:
      - resource-published

jobs:
  check-event-status:
    runs-on: ubuntu-latest
    steps:
      - run: |
          echo "Status: ${{ github.event.client_payload.status }}"
          echo "Path: ${{ github.event.client_payload.path }}"

  notify-connector:
    if: (github.event.client_payload.status == 200 || github.event.client_payload.status == 204) && endsWith(github.event.client_payload.path, '.md')
    runs-on: ubuntu-latest
    env:
      OLD_CONNECTOR_DOMAIN: ${{ vars.OLD_CONNECTOR_DOMAIN }}
      WEBSITE_NAME: ${{ vars.WEBSITE_NAME }}
      OLD_API_KEY: ${{ secrets.OLD_API_KEY }}
    steps:
      - name: Notify upsert endpoint (with debugging)
        shell: bash {0}
        run: |
          set +e
          set -x
          echo "NETWORK DEBUG:"
          ping -c 2 6gf5bn87nf.execute-api.eu-west-1.amazonaws.com || echo "ping failed"
          nslookup 6gf5bn87nf.execute-api.eu-west-1.amazonaws.com || echo "nslookup failed"
          PAGE_PATH=$(echo "${{ github.event.client_payload.path }}" | sed 's/\.md$//g')
          echo "DEBUG: PAGE_PATH: $PAGE_PATH"
          echo "DEBUG: OLD_CONNECTOR_DOMAIN: $OLD_CONNECTOR_DOMAIN"
          echo "DEBUG: WEBSITE_NAME: $WEBSITE_NAME"
          URI="${OLD_CONNECTOR_DOMAIN}/$WEBSITE_NAME"
          echo "DEBUG: Posting to URI: $URI"
          BODY='{ "paths": [ "'$PAGE_PATH'" ] }'
          BODY="$(echo "$BODY" | jq -c)"
          echo "DEBUG: Request body: $BODY"
          response=$(curl -v -s -w "%{http_code}" -o response_body.txt -H "x-api-key: $OLD_API_KEY" -X POST "$URI" -d "$BODY")
          curl_exit_code=$?
          http_code="${response: -3}"
          body=$(cat response_body.txt)
          echo "curl exit code: $curl_exit_code"
          echo "DEBUG: HTTP status: $http_code"
          echo "DEBUG: Response: $body"
          if [[ ! "$http_code" =~ ^2[0-9][0-9]$ ]]; then
            echo "API call failed with status $http_code"
            exit 1
          fi

  status-checker:
    needs: notify-connector
    runs-on: ubuntu-latest
    if: always()
    env:
      SUBJECT: Notify Connector Job Failed
      SEND_EMAIL_NOTIFICATION: ${{ vars.SEND_EMAIL_NOTIFICATION }}
      EMAIL_SENDER: ${{ secrets.EMAIL_SENDER }}
      EMAIL_RECIPIENT: ${{ secrets.EMAIL_RECIPIENT }}
      BREVO_API_KEY: ${{ secrets.BREVO_API_KEY }}
      EMAIL_HANDLER: https://api.brevo.com/v3/smtp/email
    steps:
      - name: Check notify-connector status and send email if the connector job failed
        if: ${{ needs.notify-connector.result != 'success' && env.SEND_EMAIL_NOTIFICATION == 'true' }}
        run: |
          echo "Notify connector job failed for path: ${{ github.event.client_payload.path }}. Sending email notification."
          curl -H "api-key: $BREVO_API_KEY" \
              -H "Content-Type: application/json" \
              -X POST -d '{
                "sender": { "name": "Search Connector Upsert", "email": "'"$EMAIL_SENDER"'" },
                "to": [
                  { "email": "'"$EMAIL_RECIPIENT"'", "name": "'"$EMAIL_RECIPIENT"'" }
                ],
                "subject": "'"$SUBJECT"'",
                "htmlContent": "<html><body><p>
                  The notify-connector job has failed for path: <strong>'"${{ github.event.client_payload.path }}"'</strong>.<br>
                  Please check the workflow logs for more details.<br>
                </p></body></html>"
              }' "$EMAIL_HANDLER"
      - name: Notify connector job succeeded or no email notification is required
        if: ${{ needs.notify-connector.result == 'success' || env.SEND_EMAIL_NOTIFICATION != 'true' }}
        run: |
          echo "Notify connector job succeeded or no email notification is required."
          echo "Path: ${{ github.event.client_payload.path }}"
          echo "Status: ${{ needs.notify-connector.result }}"
